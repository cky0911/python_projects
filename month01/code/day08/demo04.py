"""
    作用域
        一、作用域
            1. 作用域：变量起作用的范围。
            2. Local局部作用域：函数内部。
            3. Enclosing 外部嵌套作用域 ：函数嵌套。
            4. Global全局作用域：模块(.py文件)内部。
            5. Builtin内置模块作用域：builtins.py文件。
        变量名的查找规则
            1. 由内到外：L -> E -> G -> B
            2. 在访问变量时，先查找本地变量，然后是包裹此函数外部的函数内部的变量，之后是全局变量，最后是内置变量。
       局部变量
            1. 定义在函数内部的变量(形参也是局部变量)
            2. 只能在函数内部使用
            3. 调用函数时才被创建，函数结束后自动销毁
        全局变量
            1. 定义在函数外部,模块内部的变量。
            2. 在整个模块(py文件)范围内访问（但函数内不能将其直接赋值）。
        global 语句
            1. 作用：
                在函数内部修改全局变量。
                在函数内部定义全局变量(全局声明)。
            2. 语法：
                global 变量1, 变量2, …
            3. 说明
                在函数内直接为全局变量赋值，视为创建新的局部变量。
                不能先声明局部的变量，再用global声明为全局变量。
"""

# 全局变量
global01 = "ok"


# print(l01)
def fun01():
    # 局部变量：在函数内部定义的变量
    local01 = 100
    # print(local01)
    print(local01)
    # 　在函数内部可以读取全局变量
    # print(global01)

    # 创建了一个局部变量g01，而不是修改全局变量
    # global01 = "no"

    # 定义全局变量global01
    global global01
    # 此时修改的是全局变量
    global01 = "no"
    print(global01)
    # 定义全局变量global02
    global global02
    global02 = 250


fun01()

print(global01)  # ?

print(global02)
