"""
    集合
        一、定义
            1. 由一系列不重复的不可变类型变量组成的可变映射容器。无序
            2. 相当于只有键没有值的字典(键则是集合的数据)。
            3. 主要应用是从别的容器转换成集合进行去重以及交并补等操作
        二、基础操作
            1. 创建空集合：
                集合名 = set()
                集合名 = set(可迭代对象)
            2. 创建具有默认值集合：
                集合名 = {1, 2, 3}
                集合名 = set(可迭代对象)
            3. 添加元素：
                集合名.add(元素)
            4. 删除元素：
                集合名.discard(元素)
            5. 数学运算
                    1.	交集&：返回共同元素。
                    s1 = {1, 2, 3}
                    s2 = {2, 3, 4}
                        s3 = s1 & s2  # {2, 3}

                    2.	并集：返回不重复元素
                    s1 = {1, 2, 3}
                        s2 = {2, 3, 4}
                        s3 = s1 | s2  # {1, 2, 3, 4}

                    3.	补集-：返回只属于其中之一的元素
                        s1 = {1, 2, 3}
                        s2 = {2, 3, 4}
                        s1 - s2  # {1} 属于s1但不属于s2

                        补集^：返回不同的的元素
                        s1 = {1, 2, 3}
                        s2 = {2, 3, 4}
                        s3 = s1 ^ s2  # {1, 4}  等同于(s1-s2 | s2-s1)

                    4.	子集<：判断一个集合的所有元素是否完全在另一个集合中
                    5.	超集>：判断一个集合是否具有另一个集合的所有元素
                        s1 = {1, 2, 3}
                        s2 = {2, 3}
                        s2 < s1  # True
                        s1 > s2  # True

                    6.	相同或不同== !=：判断集合中的所有元素是否和另一个集合相同。
                        s1 = {1, 2, 3}
                        s2 = {3, 2, 1}
                        s1 == s2  # True
                        s1 != s2  # False
                        子集或相同,超集或相同 <=  >=

"""
# 1. 创建集合
set01 = set()
# set --> str
set01 = set("abcac")
list01 = list(set01)
str01 = "".join(list01)
print(str01)  # "bca"
# 创建具有默认值的集合
set02 = {"a", "b", "a"}

# 2. 添加元素
set02.add("qtx")

# 3. 删除元素
set02.remove("a")

# 4. 获取所有元素
for item in set02:
    print(item)

# 5. 数学运算
set01 = {1, 2, 3}
set02 = {2, 3, 4}
# 交集
print(set01 & set02)  # {2,3}
# 并集
print(set01 | set02)  # {1, 2, 3, 4}
# 补集
print(set01 ^ set02)  # {1, 4}
print(set01 - set02)  # {1}
print(set02 - set01)  # {4}

# 子集
set03 = {1, 2}
print(set03 < set01)
# 超集
print(set01 > set03)
