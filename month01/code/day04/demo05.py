"""
    容器类通用操作
        一、数学运算符
            +：用于拼接两个容器
            +=：用原容器与右侧容器拼接,并重新绑定变量
            *：重复生成容器元素
            *=：用原容器生成重复元素, 并重新绑定变量
            < <= > >= == !=：依次比较两个容器中元素,一但不同则返回比较结果。

        二、成员运算符
            语法：数据 in 序列       数据 not in 序列
            作用：如果在指定的序列中找到值，返回bool类型。

        三、索引 index
            作用:访问容器元素

            语法:容器[整数]

            说明:正向索引从0开始，第二个索引为1，最后一个为len(s)-1。
                反向索引从-1开始,-1代表最后一个,-2代表倒数第二个,以此类推,第一个是-len(s)。

        四、切片 slice
            作用：从容器中取出相应的元素重新组成一个容器。

            语法：容器[(开始索引):(结束索引)(:(步长))]

            说明
                小括号()括起的部分代表可省略
                结束索引不包含该位置元素
                步长是切片每次获取完当前元素后移动的偏移量

        五、内建函数
            len(x) 返回序列的长度
            max(x) 返回序列的最大值元素
            min(x) 返回序列的最小值元素
            sum(x) 返回序列中所有元素的和(元素必须是数值类型)
"""
str01 = "悟空"
str02 = "八戒"
# 字符串拼接
str03 = str01 + str02
# 　字符串累加
str01 += str02
print(str01)

# 重复生成元素
print(str02 * 3)  # 八戒八戒八戒
str02 *= 3
print(str02)
# 依次比较两个容器中元素,一但不同则返回比较结果。
print("a悟空" > "b八戒")

# 成员运算符
print("我叫" in "我叫齐天大圣")

# 索引
message = "我叫齐天大圣"
# 获取正数第三个字
print(message[2])
# 获取最后一个字
print(message[-1])

# 切片
print(message[0:2])  # 我叫
# 开始值默认为开头
print(message[:2])  # 我叫
# 结束值默认为末尾
print(message[-2:])  # 大圣
print(message[:])  # 我叫齐天大圣

print(message[-2:-5:-1])  # 大天齐
print(message[::-1])  # 圣大天齐叫我

print(message[1:1])  # 空
print(message[3:1])  # 空
print(message[-2:1])  # 空
# 索引不能越界
# print(message[7])
# 切片越界不报错
print(message[1:7])  # 叫齐天大圣
